name: Cleanup test user workspaces
on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "true to do a dry run (i.e. don't actually try to delete anything), false otherwise."
        required: false
        default: 'true'
      terra_server:
        description: 'the server to cleanup (e.g. broad-dev)'
        required: true

jobs:
  cleanup-test-user-workspaces:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current code
        id: checkout_code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.BROADBOT_GITHUB_TOKEN }}
      - name: Set up AdoptOpenJDK 11
        id: setup_jdk
        uses: joschi/setup-jdk@v2
        with:
          java-version: 11
      - name: Cache Gradle packages
        id: cache_gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}
      - name: Render config
        id: render_config
        run: |
          # For security reasons, Broad prefers we read GHA secrets instead of reading from vault.
          # this step does the equivalent of the tools/render-config.sh script.
          # on local machines, the script fetches a SA from Vault.
          # in GH actions, the SA key is stored in a GH repo secret.
          # regardless of how it was fetched, tests and scripts expect these
          # keys to be stored in rendered/broad/
          mkdir -p rendered/broad/
          echo "$TEST_USER_SA_KEY" > rendered/broad/test-user-account.json
          echo "$EXT_PROJECT_SA_KEY" > rendered/broad/external-project-account.json
          echo "$JANITOR_CLIENT_SA_KEY" > rendered/broad/janitor-client.json
          echo "$BROOKLYN_THUNDERLORD" > rendered/broad/Brooklyn.Thunderlord@test.firecloud.org.json
          echo "$ETHAN_BONECHEWER" > rendered/broad/Ethan.Bonechewer@test.firecloud.org.json
          echo "$JOHN_WHITECLAW" > rendered/broad/John.Whiteclaw@test.firecloud.org.json
          echo "$LILY_SHADOWMOON" > rendered/broad/Lily.Shadowmoon@test.firecloud.org.json
          echo "$NOAH_FROSTWOLF" > rendered/broad/Noah.Frostwolf@test.firecloud.org.json
          echo "$PENELOPE_TWILIGHTSHAMMER" > rendered/broad/Penelope.TwilightsHammer@test.firecloud.org.json
        env:
          TEST_USER_SA_KEY: ${{ secrets.TEST_USER_SA_KEY }}
          EXT_PROJECT_SA_KEY: ${{ secrets.EXT_PROJECT_SA_KEY }}
          JANITOR_CLIENT_SA_KEY: ${{ secrets.JANITOR_CLIENT_SA_KEY }}
          BROOKLYN_THUNDERLORD: ${{ secrets.BROOKLYN_THUNDERLORD }}
          ETHAN_BONECHEWER: ${{ secrets.ETHAN_BONECHEWER }}
          JOHN_WHITECLAW: ${{ secrets.JOHN_WHITECLAW }}
          LILY_SHADOWMOON: ${{ secrets.LILY_SHADOWMOON }}
          NOAH_FROSTWOLF: ${{ secrets.NOAH_FROSTWOLF }}
          PENELOPE_TWILIGHTSHAMMER: ${{ secrets.PENELOPE_TWILIGHTSHAMMER }}
      - name: Run cleanup script
        id: run_cleanup_script
        run: |
          echo "dryrun: $DRY_RUN"
          echo "terraserver: $TERRA_SERVER"
          if [ "$DRY_RUN" == "true" ]; then
            ./gradlew cleanupTestUserWorkspaces -Pserver=$TERRA_SERVER -PtestConfig=broad -PdryRun
          else
            ./gradlew cleanupTestUserWorkspaces -Pserver=$TERRA_SERVER -PtestConfig=broad
          fi
        env:
          DRY_RUN: ${{ github.event.inputs.dry_run }}
          TERRA_SERVER: ${{ github.event.inputs.terra_server }}
      - name: Archive logs and context file
        id: archive_logs_and_context
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: logs-and-context
          # We don't want .terra/StoredCredential, so list logs and context.json separately.
          path: |
            /tmp/test-context/.terra/logs/
            /tmp/test-context/.terra/context.json
